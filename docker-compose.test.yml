version: '3.8'

services:
  # Test database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: test_comfyui
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    ports:
      - "5432:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d test_comfyui"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Test Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Test MinIO (S3 compatible storage)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: test-access-key
      MINIO_ROOT_PASSWORD: test-secret-key
    command: server /data --console-address ":9001"
    volumes:
      - minio_test_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Mock ComfyUI server for testing
  mock-comfyui:
    build:
      context: .
      dockerfile: docker/Dockerfile.mock-comfyui
    ports:
      - "8188:8188"
    environment:
      - MOCK_MODE=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8188/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Test API server
  testapi:
    build:
      context: .
      dockerfile: docker/Dockerfile.test
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://test:test@postgres:5432/test_comfyui
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=test-access-key
      - S3_SECRET_KEY=test-secret-key
      - S3_BUCKET=test-bucket
      - COMFYUI_BASE_URL=http://mock-comfyui:8188
      - DEBUG=true
      - TESTING=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      mock-comfyui:
        condition: service_healthy
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests

  # Test runner
  test-runner:
    build:
      context: .
      dockerfile: docker/Dockerfile.test
    environment:
      - TEST_DATABASE_URL=postgresql://test:test@postgres:5432/test_comfyui
      - TEST_REDIS_URL=redis://redis:6379/15
      - TEST_S3_ENDPOINT=http://minio:9000
      - TEST_COMFYUI_BASE_URL=http://mock-comfyui:8188
      - TEST_API_BASE_URL=http://testapi:8000
      - DOCKER_TEST_MODE=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      mock-comfyui:
        condition: service_healthy
      testapi:
        condition: service_started
    command: |
      bash -c "
        # Wait for API to be ready
        sleep 10
        
        # Run tests
        pytest tests/ -v \
          --cov=src \
          --cov-report=term-missing \
          --cov-report=html:htmlcov \
          --junit-xml=junit-docker.xml \
          -m 'not slow'
      "
    volumes:
      - ./tests:/app/tests
      - ./src:/app/src
      - test_results:/app/htmlcov

volumes:
  postgres_test_data:
  redis_test_data:
  minio_test_data:
  test_results: